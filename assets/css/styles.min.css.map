{"version":3,"sources":["../../../node_modules/normalize.css/normalize.css","00-helpers/_helpers.scss","00-helpers/_base.scss","00-helpers/_init.scss","../../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","00-helpers/vertical-rhythm/_vertical_rhythm.scss","00-helpers/vertical-rhythm/_units.scss","01-grid/_base.scss","../../_patterns/01-base/grid/_one-up.scss","../../_patterns/01-base/grid/_two-up.scss","../../_patterns/02-atoms/03-buttons/_button.scss","../../_patterns/02-atoms/05-images/_images.scss","../../_patterns/03-molecules/inline-blockquote/_inline-blockquote.scss","../../_patterns/03-molecules/inline-image/_inline-images.scss","../../_patterns/03-molecules/inline-video/_inline-video.scss","../../_patterns/03-molecules/menu/_menu.scss","../../_patterns/03-molecules/pager/_pager.scss","../../_patterns/03-molecules/sidebar-ctas/sidebar-ctas.scss","../../_patterns/03-molecules/sidebar-navigation/sidebar-navigation.scss","../../_patterns/04-organisms/_site-header.scss","00-helpers/_print.scss"],"names":[],"mappings":"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","file":"styles.min.css","sourcesContent":["/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n","// @file\n// Define your custom Sass mixins and extends here.\n// @copyright Copyright (c) 2018 Palantir.net\n\n// =============================================================================\n// Typography Helpers\n// =============================================================================\n\n// Tight tracking \n%track-in {\n  letter-spacing: -.0125em;\n}\n\n// Open tracking\n%track-out {\n  letter-spacing: .1em;\n}\n\n// Style all caps with a slightly open tracking. \n%allcaps {\n  @extend %track-out;\n  text-transform: uppercase;\n}\n\n// =============================================================================\n// List Helpers\n// =============================================================================\n\n// Unstyle a list\n%no-list,\n.no-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n// =============================================================================\n// Clearfix Helpers\n//\n// Applies a clearfix ruleset using a placeholder selector. Placeholder selectors\n// do not get compiled uless they are called - removing the nesting issues that\n// can otherwise occur with extends.\n// =============================================================================\n\n.clearfix,\n%clearfix {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n    height: 1px;\n  }\n}\n\n// =============================================================================\n// Visibility Helpers\n//\n// This mixin allows you to visually hide something but keep it accessible via \n// a screen reader for accessibility purposes.\n//\n// Element-invisible as defined by snook.ca\n// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n// =============================================================================\n\n.visually-hidden,\n%visually-hidden,\n.element-invisible,\n%element-invisible {\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  @if support-legacy-browser(ie, '7') {\n    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.\n  }\n  clip: rect(1px, 1px, 1px, 1px);\n}\n\n// Turns off the element-invisible effect. \n.visually-hidden-off,\n%visually-hidden-off,\n.element-invisible-off,\n%element-invisible-off {\n  position: static !important;\n  clip: auto;\n  height: auto;\n  width: auto;\n  overflow: auto;\n}\n\n.element-focusable,\n%element-focusable {\n  @extend %element-invisible;\n\n  &:active,\n  &:focus {\n    @extend %element-invisible-off;\n  }\n}\n\n// =============================================================================\n// Color Functions\n// =============================================================================\n\n// Tint\n@function tint($color, $percentage) {\n  @return mix(white, $color, $percentage);\n}\n\n// Shade\n@function tint($color, $percentage) {\n  @return mix(black, $color, $percentage);\n}\n\n// =============================================================================\n// Transition Functions\n// =============================================================================\n\n@mixin trans($property: all, $timing: .3s, $easing: ease) {\n  transition: $property $timing $easing;\n}\n","// @file\n// This document builds on normalize to setup standards for font sizes.\n\n// 1. Set document-wide box-sizing\n \n*,\n*:before,\n*:after {\n  box-sizing: border-box; \n}\n\n// Body Font declarations and sizing\n// Add your base font family, size, lineheight, and color.\n// Include global adjustments for breakpoint sizing if desired.\nbody {\n  color: $black;\n  font-size: ($base-font-size / 16px) * 100%;\n  line-height: ($base-line-height / $base-font-size) * 1em;\n  font-family: $base-font-family;\n  \n  @include breakpoint($bp2) {\n    font-size: ($base-font-size / 16px) * 110%;\n  }\n  \n  @include breakpoint($bp3) {\n    font-size: ($base-font-size / 16px) * 120%;\n  }\n}\n\n// Base Link styles\na,\na:link,\na:visited {\n  @include trans();\n  color: $gray-dark;\n}\n\na:active,\na:hover {\n  color: $gray-medium;\n}\n\na:focus {\n  color: $gray-medium;\n}\n\n// Base heading styles\nh1 {\n  // Set the font-size and line-height while keeping a proper vertical rhythm.\n  @include adjust-font-size-to($h1-font-size, 1.75);\n  // Set 1 unit of vertical rhythm on the top and bottom margins.\n  @include leader(1.25, $h1-font-size);\n  @include trailer(.75, $h1-font-size);\n  font-family: $serif;\n}\n\nh2 {\n  @include adjust-font-size-to($h2-font-size, 1.5);\n  @include leader(1.25, $h2-font-size);\n  @include trailer(.75, $h2-font-size);\n  font-family: $serif;\n}\n\nh3 {\n  @include adjust-font-size-to($h3-font-size, 1.35);\n  @include leader(1, $h3-font-size);\n  @include trailer(.75, $h3-font-size);\n  font-family: $serif;\n}\n\nh4 {\n  @include adjust-font-size-to($h4-font-size, 1.1);\n  @include leader(1, $h4-font-size);\n  @include trailer(.5, $h4-font-size);\n  font-family: $sans2;\n}\n\nh5 {\n  @include adjust-font-size-to($h5-font-size, .95);\n  @include leader(.75, $h5-font-size);\n  @include trailer(.5, $h5-font-size);\n}\n\nh6 {\n  @include adjust-font-size-to($h6-font-size, .85);\n  @include leader(.75, $h6-font-size);\n  @include trailer(.25, $h6-font-size);\n}\n\n// Pre tag\n\npre {\n  font-family: $mono;\n} \n\n// Mark tag\n\nmark {\n  background-color: $yellow;\n  color: $black;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\nul.plain {\n  padding-left: 0;\n  list-style-type: none;\n}\n","//\n// Initialization partial\n//\n// To make it easier to use all variables and mixins in any Sass file in this\n// theme, each .scss file has a @import \"init\" declaration. And this _init.scss\n// file is in charge of importing all the other partials needed for the theme.\n//\n// This initialization partial is organized in this way:\n// - First we set any shared Sass variables.\n// - Next we import NPM packages (Sass mixin libraries).\n// - Last we define our custom mixins for this theme.\n\n// =============================================================================\n// Browser Support Declarations, Support same browsers as normalize.css v8\n// =============================================================================\n\n$support-for: (\n  ie: 9, '*': -4\n);\n\n// =============================================================================\n// Variables\n// =============================================================================\n\n// Vertical_rhythm package is a powerful tool to set up a vertical\n// rhythm for your entire page. You can see some of its mixins and functions in\n// \n// Use these in the normalize.scss file.\n\n// BASE FONT VARIALBES\n\n$base-font-size: 16px; // The font size set on the root html element.\n$base-line-height: 24px; // This line-height determines the basic unit of vertical rhythm.\n\n// TYPE SCALE\n\n$xxxl-heading: 3.25 * $base-font-size;\n$xxl-heading: 2.35 * $base-font-size;\n$xl-heading: 2 * $base-font-size;\n$lg-heading: 1.85 * $base-font-size;\n$md-heading: 1.5 * $base-font-size;\n$sm-heading: 1.25 * $base-font-size;\n$xs-heading: 1.15 * $base-font-size;\n$text: 1 * $base-font-size;\n$label: .8 * $base-font-size;\n$crumb: .6 * $base-font-size;\n\n// BASE HEADING SIZES\n// Used in Normalize\n$h1-font-size: $xxl-heading;\n$h2-font-size: $xl-heading;\n$h3-font-size: $lg-heading;\n$h4-font-size: $md-heading;\n$h5-font-size: $sm-heading;\n$h6-font-size: $xs-heading;\n\n\n// FONT FAMILY DECLARATIONS\n\n// The following font family declarations are based on the Microsoft core web\n// fonts which are common fonts available on most computer systems. The DejaVu\n// and Nimbus Sans fonts are commonly available on Linux systems where the MS\n// fonts are less common. Tahoma and Helvetica are also widely available.\n\n// First, let's create some Base font stacks.\n$rockwell: Rockwell, \"Rockwell\";\n$calibri: Calibri, Candara, Segoe, \"Segoe UI\", Optima, Arial, sans-serif;\n$avantgarde: itc-avant-garde-gothic-pro, Century Gothic, sans-serif;;\n\n$times-new-roman: \"Times New Roman\", Times, Georgia, \"DejaVu Serif\", serif;\n$times: Times, \"Times New Roman\", Georgia, \"DejaVu Serif\", serif;\n$georgia: Georgia, \"Times New Roman\", \"DejaVu Serif\", serif;\n$verdana: Verdana, Tahoma, \"DejaVu Sans\", sans-serif;\n$tahoma: Tahoma, Verdana, \"DejaVu Sans\", sans-serif;\n$helvetica: Helvetica, Arial, \"Nimbus Sans L\", sans-serif;\n$arial: Arial, Helvetica, \"Nimbus Sans L\", sans-serif;\n\n// If using server side fonts, place your @font-face declarations here:\n\n\n// Now, Create your custom font stacks\n$sans: $calibri;\n$sans2: $avantgarde;\n$serif: $rockwell;\n$mono: \"Courier New\", \"DejaVu Sans Mono\", monospace, sans-serif;\n\n// Last, determine which fonts to add to these variables used in normalize.scss\n$base-font-family: $sans; // The font family set on the html element.\n$font-monospace: $mono;\n\n\n// =============================================================================\n// Color Variables\n// =============================================================================\n\n// Primary palette\n$navy: #002D62;\n$green: #00703C;\n$gold: #FFDD00;\n\n// Secondary palette\n$sky: #318BCD;\n$orange: #c33d27;\n\n// Neutral palette\n$black: #222222;\n$gray-dark: #414042;\n$gray-medium: #999898;\n$gray-light: #d8d8d8;\n$off-white: #f2f2f2;\n$white: #ffffff;\n\n// Helper colors\n$yellow: #ff0; // Mark\n\n\n// =============================================================================\n// Breakpoint Variables\n//\n// These determine the major breakpoints used most consistently throughout \n// your site. They are used with the breakpoint-sass mixin.\n// =============================================================================\n\n// Breakpoint Variables\n$bp1: 400px;\n$bp2: 600px;\n$bp3: 900px;\n$bp4: 1200px;\n$bp5: 1600px;\n\n// =============================================================================\n// Spacing Variables\n//\n// These variables help you maintain consistent spacing throughout your site.\n// By default, these are used in inline components (blockquote, image, video)\n// =============================================================================\n\n$space: rhythm(1.5);\n$space-half: rhythm(.75);\n$space-quarter: rhythm(.375);\n\n// =============================================================================\n// Partials to be shared with all .scss files.\n// =============================================================================\n// Normalize\n@import \"node_modules/normalize.css/normalize\";\n// Support-for\n@import \"node_modules/support-for/sass/_support-for.scss\";\n// Add the Breakpoint mixin.\n@import \"node_modules/breakpoint-sass/stylesheets/breakpoint\";\n\n\n// =============================================================================\n// Shadows\n// =============================================================================\n\n$shadow: 0px 1px 10px 0px rgba(0,0,0,0.5);;","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","/**\n * @file\n * Libsass-compatible port of Compass' vertical-rhythm helpers\n *\n * @see https://github.com/neoeno/libsass-compass-vertical-rhythm\n */\n\n@import \"grid_background\";\n@import \"units\";\n\n// The default font size for all text in pixels\n$base-font-size: 16px !default;\n\n// The distance between text baselines (vertical rhythm) in pixels.\n$base-line-height: 24px !default;\n\n// The length unit in which to output rhythm values.\n// Supported values: px, em, rem. Percent units can't be used since they\n// make calculating padding and margins impractical, and percentage borders are\n// not valid or supported in css.\n$rhythm-unit: 'em' !default;\n\n// Whether to output fallback values in px when using rem as the rhythm-unit.\n$rem-with-px-fallback: true !default;\n\n// Default values for rhythm borders properties.\n// Supports style alone eg. `solid` or list of style and color eg. `solid #aaa`;\n$default-rhythm-border-width: 1px !default;\n$default-rhythm-border-style: solid !default;\n\n// Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function\n// to round the line height to the nearest half line height instead of the\n// nearest integral line height to avoid large spacing between lines.\n$round-to-nearest-half-line: false !default;\n\n// Ensure there is at least this many pixels\n// of vertical padding above and below the text.\n$min-line-padding: 2px !default;\n\n// The leader is the amount of whitespace in a line.\n// It might be useful in your calculations.\n$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n\n// The half-leader is the amount of whitespace above and below a line.\n// It might be useful in your calculations.\n$base-half-leader: $base-leader / 2;\n\n// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n$relative-font-sizing: if($rhythm-unit == px, false, true);\n\n// Should we support IE6 by setting base font size?\n$compass-rhythm-support-ie6: false;\n\n// Validate units\n@if unit($base-font-size) != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\"; }\n@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\"; }\n@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n}\n\n\n// Calculate rhythm units.\n@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n  @if unit($rhythm) == px {\n    $rhythm: floor($rhythm);\n  }\n  @return $rhythm;\n}\n\n// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n@function lines-for-font-size($font-size) {\n  $lines: if($round-to-nearest-half-line,\n    ceil(2 * $font-size / $base-line-height) / 2,\n    ceil($font-size / $base-line-height));\n  // If lines are cramped include some extra lead.\n  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n  }\n  @return $lines;\n}\n\n\n// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n// by default.\n@mixin output-rhythm($property, $values) {\n  @if $rhythm-unit == rem and $rem-with-px-fallback {\n    @include rem($property, $values);\n  }\n  @else {\n    $output: ();\n    @each $value in $values {\n      @if unit($value) == px {\n        // Ensure all pixel values are rounded to the nearest pixel.\n        $output: join($output, round($value));\n      }\n      @else {\n        $output: join($output, $value);\n      }\n    }\n    #{$property}: $output;\n  }\n}\n\n// Establishes a font baseline for the given font-size.\n@mixin establish-baseline($font-size: $base-font-size) {\n  $relative-size: 100% * ($font-size / $browser-default-font-size);\n\n  @if $compass-rhythm-support-ie6 and (not $relative-font-sizing) {\n    // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n    // whose root is set in ems. So we set the root font size in percentages of\n    // the default font size, even if we are using absolute sizes elsewhere.\n    * html { font-size: $relative-size; }\n  }\n  html {\n    font-size: if($relative-font-sizing, $relative-size, $font-size);\n\n    // Webkit has a bug that prevents line-height being set in rem on <html>;\n    // To work around this and simplify output, we can set initial line-height\n    // in ems for all relative rhythm units, even when $rhythm-unit is `rem`.\n    @if $relative-font-sizing {\n      line-height: convert-length($base-line-height, em);\n    }\n    @else {\n      line-height: round($base-line-height);\n    }\n  }\n}\n\n// Resets the baseline to 1 rhythm unit\n// Does not work on elements whose font-size is different from $base-font-size.\n//\n// @deprecated This mixin will be removed in the next release.\n// Please use `adjust-leading-to(1)` instead.\n@mixin reset-baseline($font-size: $base-font-size) {\n  @include adjust-leading-to(1, $font-size);\n}\n\n// Show a background image that can be used to debug your alignments.\n// As this is a development feature, this mixin never outputs pixel fallbacks\n// for rem output.\n// Include the $img argument if you would rather use your own image than the\n// Compass default gradient image.\n@mixin debug-vertical-alignment($img: false) {\n  @if $img {\n    background: image-url($img);\n  }\n  @else {\n    @include baseline-grid-background(if($round-to-nearest-half-line, rhythm(1/2), rhythm(1)));\n  }\n}\n\n// Adjust a block to have a different font size and line height to maintain the\n// rhythm. $lines specifies how many multiples of the baseline rhythm each line\n// of this font should use up. It does not have to be an integer, but it\n// defaults to the smallest integer that is large enough to fit the font.\n// Use $from-size to adjust from a font-size other than the base font-size.\n@mixin adjust-font-size-to($to-size, $lines: auto, $from-size: $base-font-size) {\n  $to-size: convert-length($to-size, px, $from-size);\n  @if $lines == auto {\n    $lines: lines-for-font-size($to-size);\n  }\n  @include output-rhythm(font-size, convert-length($to-size, $rhythm-unit, $from-size));\n  @include adjust-leading-to($lines, $to-size);\n}\n\n// Adjust a block to have different line height to maintain the rhythm.\n// $lines specifies how many multiples of the baseline rhythm each line of this\n// font should use up. It does not have to be an integer, but it defaults to the\n// smallest integer that is large enough to fit the font.\n@mixin adjust-leading-to($lines, $font-size: $base-font-size) {\n  @include output-rhythm(line-height, rhythm($lines, $font-size));\n}\n\n// Apply leading whitespace. The $property can be margin or padding.\n@mixin leader($lines: 1, $font-size: $base-font-size, $property: margin) {\n  @include output-rhythm(#{$property}-top, rhythm($lines, $font-size));\n}\n\n// Apply leading whitespace as padding.\n@mixin padding-leader($lines: 1, $font-size: $base-font-size) {\n  @include output-rhythm(padding-top, rhythm($lines, $font-size));\n}\n\n// Apply leading whitespace as margin.\n@mixin margin-leader($lines: 1, $font-size: $base-font-size) {\n  @include output-rhythm(margin-top, rhythm($lines, $font-size));\n}\n\n// Apply trailing whitespace. The $property can be margin or padding.\n@mixin trailer($lines: 1, $font-size: $base-font-size, $property: margin) {\n  @include output-rhythm(#{$property}-bottom, rhythm($lines, $font-size));\n}\n\n// Apply trailing whitespace as padding.\n@mixin padding-trailer($lines: 1, $font-size: $base-font-size) {\n  @include output-rhythm(padding-bottom, rhythm($lines, $font-size));\n}\n\n// Apply trailing whitespace as margin.\n@mixin margin-trailer($lines: 1, $font-size: $base-font-size) {\n  @include output-rhythm(margin-bottom, rhythm($lines, $font-size));\n}\n\n// Shorthand mixin to apply whitespace for top and bottom margins and padding.\n@mixin rhythm(\n  $leader: 1,\n  $padding-leader: 0,\n  $padding-trailer: $padding-leader,\n  $trailer: $leader,\n  $font-size: $base-font-size\n) {\n  @include leader($leader, $font-size);\n  @include padding-leader($padding-leader, $font-size);\n  @include padding-trailer($padding-trailer, $font-size);\n  @include trailer($trailer, $font-size);\n}\n\n// Shorthand mixin to apply whitespace for top and bottom margins.\n@mixin rhythm-margins(\n  $leader: 1,\n  $trailer: $leader,\n  $font-size: $base-font-size\n) {\n  @include leader($leader, $font-size);\n  @include trailer($trailer, $font-size);\n}\n\n// Shorthand mixin to apply whitespace for top and bottom padding.\n@mixin rhythm-padding(\n  $padding-leader: 1,\n  $padding-trailer: $padding-leader,\n  $font-size: $base-font-size\n) {\n  @include padding-leader($padding-leader, $font-size);\n  @include padding-trailer($padding-trailer, $font-size);\n}\n\n// Apply a border and whitespace to any side without destroying the vertical\n// rhythm. The whitespace must be greater than the width of the border.\n@mixin apply-side-rhythm-border(\n  $side,\n  $width: $default-rhythm-border-width,\n  $lines: 1,\n  $font-size: $base-font-size,\n  $border-style: $default-rhythm-border-style\n) {\n  // If applying borders to all sides, use shorthand properties\n  $border-prop: if($side == all, border, border-#{$side});\n  @include output-rhythm(#{$border-prop}-width, convert-length($width, $rhythm-unit, $font-size));\n  #{$border-prop}-style: nth($border-style, 1);\n  @if type-of($border-style) == list and length($border-style) > 1 {\n    #{$border-prop}-color: nth($border-style, 2);\n  }\n  $padding-prop: if($side == all, padding, padding-#{$side});\n  @include output-rhythm(#{$padding-prop}, rhythm($lines, $font-size, $offset: $width));\n}\n\n// Apply a leading border.\n// $border-style and $width are deprecated and will be removed in a future version of Compass.\n@mixin leading-border(\n  $width: $default-rhythm-border-width,\n  $lines: 1,\n  $font-size: $base-font-size,\n  $border-style: $default-rhythm-border-style\n) {\n  @include apply-side-rhythm-border(top, $width, $lines, $font-size, $border-style);\n}\n\n// Apply a trailing border.\n@mixin trailing-border(\n  $width: $default-rhythm-border-width,\n  $lines: 1,\n  $font-size: $base-font-size,\n  $border-style: $default-rhythm-border-style\n) {\n  @include apply-side-rhythm-border(bottom, $width, $lines, $font-size, $border-style);\n}\n\n// Apply both leading and trailing borders.\n@mixin horizontal-borders(\n  $width: $default-rhythm-border-width,\n  $lines: 1,\n  $font-size: $base-font-size,\n  $border-style: $default-rhythm-border-style\n) {\n  @include leading-border($width, $lines, $font-size, $border-style);\n  @include trailing-border($width, $lines, $font-size, $border-style);\n}\n\n// Alias for `horizontal-borders` mixin.\n@mixin h-borders(\n  $width: $default-rhythm-border-width,\n  $lines: 1,\n  $font-size: $base-font-size,\n  $border-style: $default-rhythm-border-style\n) {\n  @include horizontal-borders($width, $lines, $font-size, $border-style);\n}\n\n// Apply borders and whitespace equally to all sides.\n@mixin rhythm-borders(\n  $width: $default-rhythm-border-width,\n  $lines: 1,\n  $font-size: $base-font-size,\n  $border-style: $default-rhythm-border-style\n) {\n  @include apply-side-rhythm-border(all, $width, $lines, $font-size, $border-style);\n}\n","// @private Default font-size for all browsers\n$browser-default-font-size: 16px;\n\n// Base font size in pixels, if not already defined.\n// Should be the same as the font-size of the html element.\n$base-font-size: 16px !default;\n\n// Whether to output fallback values in px when outputting rems.\n$rem-with-px-fallback: true !default;\n\n\n// Convert any CSS <length> or <percentage> value to any another.\n//\n// @param $length\n//   A css <length> or <percentage> value\n//\n// @param $to-unit\n//   String matching a css unit keyword, e.g. 'em', '%', etc.\n//\n// @param $from-context\n//   When converting from relative units, the absolute length (in px) to\n//   which $length refers (e.g. for $lengths in em units, would normally be the\n//   font-size of the current element).\n//\n// @param $to-context\n//   For converting to relative units, the absolute length in px to which the\n//   output value will refer. Defaults to the same as $from-context, since it is\n//   rarely needed.\n@function convert-length(\n  $length,\n  $to-unit,\n  $from-context: $base-font-size,\n  $to-context: $from-context\n) {\n\n  $from-unit: unit($length);\n\n  // Optimize for cases where `from` and `to` units are accidentally the same.\n  @if $from-unit == $to-unit { @return $length; }\n\n  // Context values must be in px so we can determine a conversion ratio for\n  // relative units.\n  @if unit($from-context) != 'px' { @warn \"Paremeter $from-context must resolve to a value in pixel units.\"; }\n  @if unit($to-context) != 'px' { @warn \"Parameter $to-context must resolve to a value in pixel units.\"; }\n\n  // Convert input length to pixels\n  $px-length: $length;\n\n  @if $from-unit != 'px' {\n    // Convert relative units using the from-context parameter.\n    // sass-lint:disable trailing-semicolon\n\t\t// sass-lint:disable indentation\n    @if      $from-unit == 'em'  { $px-length: $length * $from-context / 1em }\n    @else if $from-unit == 'rem' { $px-length: $length * $base-font-size / 1rem }\n    @else if $from-unit == '%'   { $px-length: $length * $from-context / 100% }\n    @else if $from-unit == 'ex'  { $px-length: $length * $from-context / 2ex }\n    // Convert absolute units using Sass' conversion table.\n    @else if $from-unit == 'in'  or\n             $from-unit == 'mm'  or\n             $from-unit == 'cm'  or\n             $from-unit == 'pt'  or\n             $from-unit == 'pc'  { $px-length: 0px + $length }\n    // Certain units can't be converted.\n    @else if $from-unit == 'ch'  or\n             $from-unit == 'vw'  or\n             $from-unit == 'vh'  or\n             $from-unit == 'vmin' {\n@warn \"#{$from-unit} units can't be reliably converted; Returning original value.\";\n@return $length;\n\t\t\t}\n\t\t\t@else {\n\t\t\t\t@warn \"#{$from-unit} is an unknown length unit. Returning original value.\";\n\t\t\t\t@return $length;\n\t\t\t}\n\t\t}\n\n\t// Convert length in pixels to the output unit\n\t$output-length: $px-length;\n\t@if $to-unit != 'px' {\n\t\t// Relative units\n\t\t@if      $to-unit == 'em'  { $output-length: $px-length * 1em / $to-context }\n\t\t@else if $to-unit == 'rem' { $output-length: $px-length * 1rem / $base-font-size }\n\t\t@else if $to-unit == '%'   { $output-length: $px-length * 100% / $to-context }\n\t\t@else if $to-unit == 'ex'  { $output-length: $px-length * 2ex / $to-context }\n\t\t// Absolute units\n\t\t@else if $to-unit == 'in'  { $output-length: 0in + $px-length }\n\t\t@else if $to-unit == 'mm'  { $output-length: 0mm + $px-length }\n\t\t@else if $to-unit == 'cm'  { $output-length: 0cm + $px-length }\n\t\t@else if $to-unit == 'pt'  { $output-length: 0pt + $px-length }\n\t\t@else if $to-unit == 'pc'  { $output-length: 0pc + $px-length }\n\t\t// Non-convertible units\n\t\t@else if $to-unit == 'ch'  or\n\t\t\t\t\t\t $to-unit == 'vw'  or\n\t\t\t\t\t\t $to-unit == 'vh'  or\n\t\t\t\t\t\t $to-unit == 'vmin' {\n\t\t\t@warn \"#{$to-unit} units can't be reliably converted; Returning original value.\";\n\t\t\t@return $length;\n\t\t}\n\t\t@else {\n\t\t\t@warn \"#{$to-unit} is an unknown length unit. Returning original value.\";\n\t\t\t@return $length;\n\t\t}\n\t}\n\n\t@return $output-length;\n}\n\n\n// @private Get the px/rem versions of a value.\n@function rem-fallback-values($value) {\n  $_return: (\n    px: $value,\n    rem: $value,\n  );\n\n  @if type-of($value) == number and not unitless($value) {\n    @if unit($value) == rem {\n      $_return: map-merge($_return, (\n        px: round(convert-length($value, px)),\n      ));\n    } @else if unit($value) == px {\n      $_return: map-merge($_return, (\n        px: round($value),\n        rem: convert-length($value, rem),\n      ));\n    }\n  }\n\n  @return $_return;\n}\n\n// @private Get the px/rem versions of a list (or nested lists).\n@function list-convert-rems($value) {\n  $_empty: (\n    px: (),\n    rem: (),\n  );\n  $_return: $_empty;\n  $_sep: null;\n\n  @if type-of($value) == list {\n    $_sep: list-separator($value);\n    @each $sub in $value {\n      $_this: list-convert-rems($sub);\n      $_return: (\n        px: append(map-get($_return, px), map-get($_this, px), $_sep),\n        rem: append(map-get($_return, rem), map-get($_this, rem), $_sep),\n      );\n    }\n  } @else {\n    $_this: rem-fallback-values($value);\n    $_return: map-merge($_return, $_this);\n  }\n\n  @return $_return;\n}\n\n\n// Output a given style rule containing rem values along with an (optional)\n// fallback rule for older browsers (with rem values converted to px).\n//\n// @param $property\n//   The css property name.\n//\n// @param $values\n//   The value or list of values for the property.\n//\n// @param $use-px-fallback\n//   [ true | false ]\n//\n@mixin rem($property, $values, $use-px-fallback: $rem-with-px-fallback) {\n\n  // get converted values.\n  $values: list-convert-rems($values);\n  $px-values: map-get($values, px);\n  $values: map-get($values, rem);\n\n  // Use pixel fallback for browsers that don't understand rem units.\n  @if $use-px-fallback and $px-values != $values {\n    #{$property}: $px-values;\n  }\n\n  // Use rem values for everyone else (overrides pixel values).\n  #{$property}: $values;\n}\n","// @file\n// Define your grid base here.\n\n$gap: rhythm(1);\n\n%container,\n.container {\n  max-width: 1600px;\n  margin: 0 auto;\n  padding: 0 rhythm(1);\n}\n\n.grid--2col {\n  display: grid;\n  // Setup a basic layout\n  grid-template-columns: 1fr;\n  grid-template-rows: auto;\n  // gap\n  grid-gap: $gap;\n  \n  .no-cssgrid & {\n    @extend %clearfix;\n    display: block;\n  }\n\n  @include breakpoint($bp1) {\n    grid-template-columns: 1fr 1fr;\n  } \n}\n","// @copyright Copyright (c) 2018 Palantir.net\n\n \n// 1up Layout\n.l-1up {\n  \n  .grid--2col & {\n    min-width: 0;\n    grid-column: 1 / 2;\n    \n    // For fallback, ensure you (1) change the display, \n    // (2) set a width, add (3) a 'grid-gap' with padding,\n    // and for more complex layouts, (4) add clears & floats.\n    .no-cssgrid & {\n      display: block; // 1\n      width: 100%; // 2\n      padding-left: ($gap / 2); // 3\n      padding-right: ($gap / 2); // 3\n    }\n    \n    @include breakpoint($bp1) {\n      grid-column: 1 / 3;\n    }\n  }\n}\n","// @copyright Copyright (c) 2018 Palantir.net\n\n// 2up Layout\n.l-2up--1 {\n  \n  .grid--2col & {\n    min-width: 0;\n    grid-column: 1 / 2;\n    \n    // For fallback, ensure you (1) change the display, \n    // (2) set a width, add (3) a 'grid-gap' with padding,\n    // and for more complex layouts, (4) add clears & floats.\n    .no-cssgrid & {\n      display: block; // 1\n      width: 100%; // 2\n      padding-left: ($gap / 2); // 3\n      padding-right: ($gap / 2); // 3\n    }\n    \n    @include breakpoint($bp1) {\n      \n      // For fallback, ensure you (1) change the display, \n      // (2) set a width, add (3) a 'grid-gap' with padding,\n      // and for more complex layouts, (4) add clears & floats.\n      .no-cssgrid & {\n        width: 50%; // 2\n        float: left; // 4\n        clear: left; // 4\n      } \n    }\n  }\n}\n\n.l-2up--2 {\n  \n  .grid--2col & {\n    min-width: 0;\n    grid-column: 1 / 2;\n    \n    // For fallback, ensure you (1) change the display, \n    // (2) set a width, add (3) a 'grid-gap' with padding,\n    // and for more complex layouts, (4) add clears & floats.\n    .no-cssgrid & {\n      display: block; // 1\n      width: 100%; // 2\n      padding-left: ($gap / 2); // 3\n      padding-right: ($gap / 2); // 3\n    }\n    \n    @include breakpoint($bp1) {\n      grid-column: 2 / 3;\n      \n      // For fallback, ensure you (1) change the display, \n      // (2) set a width, add (3) a 'grid-gap' with padding,\n      // and for more complex layouts, (4) add clears & floats.\n      .no-cssgrid & {\n        width: 50%; // 2\n        float: right; // 4\n      }\n    }\n  }\n}\n","button {\n  display: inline-block;\n  padding: 1px 56px 1px 30px;\n  margin-bottom: 0;\n  font-family: $serif;\n  //.font-size(12);\n  @include adjust-font-size-to(15px, 1.75);\n  font-weight : bold;\n  // line-height : (@baselineheight*.75);\n  color: $navy;\n  text-align: center;\n  vertical-align: middle;\n  background-color: transparent;\n  border: 3px solid $navy;\n  border-radius: 100px; /* to override inputs with .btn class */\n  cursor: pointer;\n  // *margin-left : .3em;\n  // .transition(background-color .1s linear);\n\n  background-image: url(\"../imgs/production/arrow-right.svg\");\n  background-repeat: no-repeat;\n  background-position: center right 25px;\n}","// @copyright Copyright (c) 2018 Palantir.net\n\n.align-none,\n.align-left,\n.inline--left {\n  display: block;\n  width: 100%;\n\n  @include breakpoint($bp1) {\n    width: 50%;\n    float: left;\n    margin: $space-half $space $space-half 0;\n  }\n}\n\n.align-right,\n.inline--right {\n  display: block;\n  width: 100%;\n\n  @include breakpoint($bp1) {\n    width: 50%;\n    float: right;\n    margin: $space-half 0 $space-half $space;\n  }\n}\n\n.inline-caption {\n  @include adjust-font-size-to($label, .8);\n  margin-top: $space-half;\n}\n","// @copyright Copyright (c) 2018 Palantir.net\n\nblockquote,\n.inline-quote {\n  @include adjust-font-size-to($sm-heading, 1.15);\n  font-style: italic;\n  margin: $space 0;\n  padding: 0;\n\n  span {\n    display: block;\n    margin-top: 1em;\n  }\n}\n","// @copyright Copyright (c) 2018 Palantir.net\n\n.inline-image {\n  margin: $space 0;\n  padding: 0;\n  \n  img {\n    display: inline-block;\n    width: 100%;\n  }\n}\n","// @copyright Copyright (c) 2018 Palantir.net\n\n.inline-video {\n  margin: $space 0;\n}\n\n.inline-video-container {\n  @extend %clearfix;\n  position: relative;\n  padding-bottom: 56.25%; /* 16:9 */\n  height: 0;\n\n  iframe,\n  object {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n}\n",".menu {\n  // position: fixed;\n  // top: 0;\n  // bottom: 0;\n  // left: -100%;\n  // width: 90%;\n  background-color: $white;\n  // box-shadow: 5px 5px 10px rgba($gray-dk, .3);\n  // visibility: hidden;\n  // overflow-y: scroll;\n  transition: left 0.25s ease, visibility 0s ease 0.5s;\n  // z-index: 600;\n  // padding-bottom: rhythm(1);\n  \n  a:link,\n  a:visited {\n    // color: $blue-gray;\n    text-decoration: none;\n    font-family: $serif;\n  }\n  \n  a:active,\n  a:hover,\n  a:focus {\n    // background-color: $gray-lt;\n    text-decoration: none;\n  }\n  \n}","// @copyright Copyright (c) 2018 Palantir.net\n\n.pager {\n  &__items {\n    list-style: none;\n    padding-left: 0;\n  }\n  // Pager list item styles\n  &__item {\n    display: inline-block;\n    margin-right: rhythm(.1);\n\n    // Link styles\n    a {\n      @include adjust-font-size-to($label, 0.8);\n      display: block;\n      padding: rhythm(.1) rhythm(.4);\n    }\n\n    // Active page\n    &.is-active a {\n      font-weight: bold;\n    }\n  }\n}\n",".sidebar__ctas {\n  position: relative;\n}\n\n.sidebar__ctas > li > a {\n  display: block;\n  width: 100%;\n  padding-top: 100%;\n  position: relative;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  cursor: pointer;\n  transform-origin: 50% 50%;\n  transition: all 0.25s ease-in-out;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  // -webkit-font-smoothing: subpixel-antialiased;\n  /* You'll want to make a global timing function */\n}\n\n.sidebar__ctas > li > a:hover {\n  z-index: 1;\n  transform: scale(1.05);\n}\n\n.sidebar__ctas .cta__content {\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  box-sizing: border-box;\n  padding: rhythm(1);\n  z-index: 1;\n}\n\n.sidebar__ctas .cta__content svg {\n  fill: $white;\n}\n\n.sidebar__ctas .cta__content h4 {\n  color: $white;\n  font-family: $serif;\n  -webkit-font-smoothing: subpixel-antialiased;\n}\n\n.sidebar__ctas .cta__content h4 > span {\n  display: block;\n  font-size: 0.625em;\n}\n\n.sidebar__ctas .cta__arrow {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  z-index: 2;\n}\n\n.sidebar__ctas .cta__arrow svg:first-child {\n  fill: #ffffff;\n  position: relative;\n  width: 22px;\n  z-index: 1;\n  right: 15px;\n  bottom: 15px;\n}\n\n.sidebar__ctas .cta__arrow svg:last-child {\n  fill: $navy;\n  opacity: 0.5;\n  background-blend-mode: multiply;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n}\n\n.cta__overlay {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(6,92,147,0.7);\n}\n\n.cta--yellow .cta__overlay {\n  background-color: rgba(208,152,0,0.7);\n}\n\n.sidebar__ctas .cta--yellow .cta__arrow svg:last-child {\n  fill: #956b06;\n}","ul.resources {\n  border-top: 5px $gold solid;\n}\n\nul.resources h4 {\n  color: $navy;\n  font-weight: normal;\n}\n\nul.resources {\n  list-style-type: none;\n}\n\nul.resources a {\n  border-bottom: 1px solid #000000;\n  display: block;\n}",".site-header {\n  background-color: $white;\n  position: relative;\n  box-shadow: $shadow;\n  z-index: 10;\n}\n\n.logo {\n  align-self: flex-end;\n  margin-bottom: 0.75em;\n}\n\n.site-header-container {\n  display: flex;\n}\n\n.nav {\n  list-style-type: none;\n  padding-left: none;\n  margin: 0;\n  li {\n    display: inline-block;\n    margin: 0 $space-half;\n    &:last-child {\n      margin-right: 0;\n    }\n    a {\n      display: inline-block;\n      text-decoration: none;\n      // font-family: $serif;\n      color: $navy;\n      font-weight: 700;\n      font-size: 1.3125rem;\n      padding: 1em 0;\n    }\n  }\n}\n\n.nav--secondary {\n  li {\n    margin: 0 $space-quarter;\n    a {\n      color: $sky;\n      font-size: 0.8125rem;\n      font-weight: 400;\n      text-transform: uppercase;\n      letter-spacing: 1px;\n    }\n    .pill {\n      color: $white;\n    }\n  }\n}\n\n.site-header__menus {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: flex-end;\n}\n\n.nav--secondary li a {\n  padding: 0;\n}\n\n.nav--secondary li a.pill {\n  color: $white;\n  background-color: $sky;\n  padding: 0.5em 1em;\n}\n\n.nav--secondary li a.pill--search:after {\n  content: url('../imgs/production/magnifying-glass-white.svg');\n  fill: $white;\n  display: inline-block;\n  margin-left: 7px;\n  transform: translateY(2px);\n}\n\n.nav .dropdown {\n  position: absolute;\n  visibility: hidden;\n  top: 100%;\n  background-color: $sky;\n  left: 0;\n  right: 0;\n  height: 100px;\n  z-index: -1;\n  box-shadow: inset 0px 5px 5px 0px rgba(0,0,0,0.15);\n}\n\n.nav .is-active .dropdown {\n  visibility: visible;\n}\n\n.site-search {\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  margin: auto;\n  background-color: $sky;\n  transform: translateY(-100%);\n  transition: 0.3s transform ease-in-out;\n}\n\n.site-header.search-open .site-search {\n  transform: translateY(0);\n}\n\n\n\n\n.site-header {\n  // display: flex;\n  // box-shadow: 0 0 10px rgba($gray-dk, .3);\n  // padding: rhythm(.5);\n  // height: 80px;\n  // min-height: 80px;\n  \n  // @include breakpoint($nav-breakpoint) {\n  //   padding: 0;\n  // }\n}\n\n// .site-header-container {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   max-width: 1400px;\n//   width: 100%;\n//   padding: 0 35px;\n  \n//   @include breakpoint($nav-breakpoint) {\n//     position: relative;\n//     margin: 0 auto;\n//     justify-content: flex-end;\n//     align-items: stretch;\n    \n//     .no-flexboxlegacy & {\n//       justify-content: space-between;\n//     }\n//   }\n  \n//   @include breakpoint(1200px) {\n//     padding: 0 70px;\n//   }\n// }\n\n// .menu-trigger {\n//   padding: 0;\n//   background-color: transparent;\n//   border-color: transparent;\n//   border-radius: 0;\n  \n//   svg {\n//     fill: $blue-gray;\n//     height: 30px;\n//     width: 30px;\n//   }\n  \n//   &:active,\n//   &:hover,\n//   &:focus {\n//     background-color: transparent;\n//     border-color: transparent;\n//     border-radius: 0;\n//     transform: scale(1);\n    \n//     svg {\n//       fill: $orange;\n//     }\n//   }\n  \n//   @include breakpoint($nav-breakpoint) {\n//     display: none;\n//     visibility: hidden;\n//   }\n// }","// @file\n// Define your print styles here.\n//\n// Add items you do not want to print with display: none\n// @copyright Copyright (c) 2018 Palantir.net\n\n@media print {\n\n  // Standardize body for print\n  body {\n    font-family: $sans;\n    background: none;\n    color: black;\n    font-size: 16pt;\n    line-height: 1.3;\n  }\n\n  h1 {\n    font-size: 24pt;\n  }\n\n  h2 {\n    font-size: 22pt;\n  }\n\n  h3 {\n    font-size: 20pt;\n  }\n\n  h4,\n  h5,\n  h6 {\n    font-size: 18pt;\n  }\n\n  // Define page margins\n  @page {\n    margin: .5cm;\n  }\n\n  // Put a max width on images to not waste ink\n  img {\n    max-width: 500px;\n  }\n\n  // Hide elements for print.\n  video,\n  audio,\n  object,\n  embed {\n    display: none;\n  }\n\n  a {\n    color: $black;\n    text-decoration: underline;\n\n    p & {\n      // Make sure the link breaks properly.\n      word-wrap: break-word;\n\n      &::after {\n        // Show link content\n        content: ' (' attr(href) ')';\n        font-size: 80%;\n      }\n    }\n  }\n}\n"]}